version: "3.7"
services:
  php:
    build:
      context: ctx
      dockerfile: php.Dockerfile
    volumes: &appvolumes
      - ./src:/var/www/html:cached
      - ./composer:/var/www/composer:cached
      - ./ctx/nginx.conf:/etc/nginx/conf.d/default.conf:cached
      - ./ctx/scripts/:/var/scripts/:cached
    environment:
    - COMPOSER_HOME=/var/www/composer
    extra_hosts:
      - "host.docker.internal:host-gateway"

  php_without_xdebug:
    build:
      context: ctx
      dockerfile: php.DockerfileWithoutXdebug
    volumes:
      - ./src:/var/www/html:delegated
      - ./ctx/nginx.conf:/etc/nginx/conf.d/default.conf:delegated
    extra_hosts:
      - "host.docker.internal:host-gateway"

  nginx:
    build:
      context: ctx
      dockerfile: nginx.Dockerfile
    ports:
      - "{{{NGINX_PROJECT_PORT}}}:80"
      - "{{{NGINX_PROJECT_PORT_SSL}}}:443"
    volumes:
      - ./src:/var/www/html:delegated
      - ./ctx/nginx.conf:/etc/nginx/conf.d/default.conf:delegated
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - php

  db:
    command: 
      --default-authentication-plugin=mysql_native_password
      --max_allowed_packet=64M
      --optimizer_use_condition_selectivity=1
      --optimizer_switch="rowid_filter=off"
    build:
      context: ctx
      dockerfile: db.Dockerfile
    ports:
      - "{{{NGINX_PROJECT_PORT+4}}}:3306"
    volumes:
      - dbdata:/var/lib/mysql
      - ./ctx/my.cnf:/etc/mysql/conf.d/mysql.cnf:delegated

  node:
    build:
      context: ctx
      dockerfile: node.Dockerfile
    volumes:
      - ./src:/var/www/html:delegated
    profiles:
      - node{{{NODEJS_ENABLED}}}
    depends_on:
      - php

  elasticsearch:
    build:
      context: ctx
      dockerfile: elasticsearch.Dockerfile
    deploy:
      resources:
        limits:
          memory: 2512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms800m -Xmx800m"
      - "cluster.routing.allocation.disk.threshold_enabled=false"
      - "index.blocks.read_only_allow_delete"
    volumes:
      - elasticsearch_vlm:/usr/share/elasticsearch/data
    profiles:
      - elasticsearch{{{ELASTICSEARCH_ENABLED}}}

  redisdb:
    build:
      context: ctx
      dockerfile: redis.Dockerfile
    profiles:
      - redisdb{{{REDIS_ENABLED}}}

  rabbitmq:
    image: rabbitmq:{{{RABBITMQ_VERSION}}}
    profiles:
      - rabbitmq{{{D}}}

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.1.3
    environment:
      PMA_HOST: "db"
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
      PMA_ABSOLUTE_URI: "http://{{{HOST_NAME_DEFAULT}}}/phpmyadmin/"
      PMA_USER: root
      PMA_PASSWORD: {{{DB_ROOT_PASSWORD}}}
      UPLOAD_LIMIT: 1G
    ports:
      - "{{{NGINX_PROJECT_PORT+2}}}:80"
    profiles:
      - phpmyadmin{{{PHPMYADMIN_ENABLED}}}
    depends_on:
      - db

  kibana:
    platform: linux/x86_64
    image: kibana:{{{ELASTICSEARCH_VERSION}}}
    environment:
      SERVER_BASEPATH: /kibana
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    ports:
      - "{{{NGINX_PROJECT_PORT+3}}}:5601"
    profiles:
      - kibana{{{KIBANA_ENABLED}}}
    depends_on:
      - elasticsearch

volumes:
  dbdata:
  elasticsearch_vlm:
